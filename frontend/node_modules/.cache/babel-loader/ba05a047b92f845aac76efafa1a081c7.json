{"ast":null,"code":"var _jsxFileName = \"/Users/madeleinebarr/Documents/engineering/fastapi-react-todo/frontend/src/components/ListTodos.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { Fragment, useState, useEffect } from \"react\";\nimport EditTodo from \"./EditTodo\"; // const TodosContext = React.createContext({\n//     todos: [], getTodos: () => {}\n// })\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst InputTodo = ({\n  todos\n}) => {\n  _s();\n\n  const [item, setItem] = useState(\"\"); // const {todos, getTodos} = React.useContext(TodosContext);\n\n  const onSubmitForm = async e => {\n    e.preventDefault();\n\n    try {\n      const body = {\n        \"id\": todos.length + 1,\n        \"item\": item\n      };\n      const response = await fetch(\"http://localhost:8000/todos\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(body)\n      });\n      window.location = \"/\";\n    } catch (err) {\n      console.error(err.message);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-center my-5\",\n      children: \"Input Todo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"d-flex\",\n      onSubmit: onSubmitForm,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"add todo\",\n        className: \"form-control\",\n        value: item,\n        onChange: e => setItem(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-success\",\n        children: \"Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n};\n\n_s(InputTodo, \"wKKxDXbBUwTIxqceeXo09VqNCpo=\");\n\n_c = InputTodo;\n\nconst ListTodos = () => {\n  _s2();\n\n  // usestate lets you set up empty state\n  // created an empty state variable array, todos, and a state method, settodos, so we can update the state variable\n  const [todos, setTodos] = useState([]); // defined a function getTodos to retrieve todos from the backend asynchronously and update the todo state variable\n\n  async function getTodos() {\n    const res = await fetch(\"http://localhost:8000/todos\");\n    const todos = await res.json();\n    setTodos(todos.data);\n  }\n\n  useEffect(() => {\n    getTodos();\n  }, []); //   console.log(todos);\n  // render the data by iterating through the todos state variable\n\n  return (\n    /*#__PURE__*/\n    // <TodosContext.Provider value={{todos, getTodos}}>\n    _jsxDEV(Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(InputTodo, {\n        todos: todos\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"table mt-5\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Description\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Edit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: todos.map(todo => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: todo.item\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(EditTodo, {\n                todo: todo\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 90,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-danger\" // onClick={() => deleteTodo(todo.todo_id)}\n                ,\n                children: \"Delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 93,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 17\n            }, this)]\n          }, todo.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }, this) //   </TodosContext.Provider>\n\n  );\n};\n\n_s2(ListTodos, \"4w2FR3x+JAhc2MKl4V8naiLXs70=\");\n\n_c2 = ListTodos;\nexport default ListTodos;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"InputTodo\");\n$RefreshReg$(_c2, \"ListTodos\");","map":{"version":3,"sources":["/Users/madeleinebarr/Documents/engineering/fastapi-react-todo/frontend/src/components/ListTodos.js"],"names":["React","Fragment","useState","useEffect","EditTodo","InputTodo","todos","item","setItem","onSubmitForm","e","preventDefault","body","length","response","fetch","method","headers","JSON","stringify","window","location","err","console","error","message","target","value","ListTodos","setTodos","getTodos","res","json","data","map","todo","id"],"mappings":"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","sourcesContent":["import React, { Fragment, useState, useEffect } from \"react\";\nimport EditTodo from \"./EditTodo\";\n\n\n// const TodosContext = React.createContext({\n//     todos: [], getTodos: () => {}\n// })\n\nconst InputTodo = ({ todos }) => {\n    const [item, setItem] = useState(\"\");\n    // const {todos, getTodos} = React.useContext(TodosContext);\n\n    const onSubmitForm = async (e) => {\n        e.preventDefault();\n        try {\n            const body = { \n                \"id\": todos.length + 1,\n                \"item\": item\n             };\n            const response = await fetch(\"http://localhost:8000/todos\", {\n                method: \"POST\",\n                headers: { \"Content-Type\": \"application/json\" },\n                body: JSON.stringify(body),\n            });\n\n            window.location = \"/\";\n            \n        } catch (err) {\n            console.error(err.message);\n        }\n    }\n\n    return(\n        <Fragment>\n      <h1 className=\"text-center my-5\">Input Todo</h1>\n      <form className=\"d-flex\" onSubmit={onSubmitForm}>\n        <input\n          type=\"text\"\n          placeholder=\"add todo\"\n          className=\"form-control\"\n          value={item}\n          onChange={(e) => setItem(e.target.value)}\n        />\n        <button className=\"btn btn-success\">Add</button>\n      </form>\n    </Fragment>\n    );\n};\n\nconst ListTodos = () => {\n    // usestate lets you set up empty state\n    // created an empty state variable array, todos, and a state method, settodos, so we can update the state variable\n    const [todos, setTodos] = useState([]);\n\n    // defined a function getTodos to retrieve todos from the backend asynchronously and update the todo state variable\n    async function getTodos() {\n        const res = await fetch(\"http://localhost:8000/todos\");\n        const todos = await res.json();\n        setTodos(todos.data);\n    }\n\n    useEffect(() => {\n        getTodos();\n      }, []);\n    \n    //   console.log(todos);\n\n      \n\n      // render the data by iterating through the todos state variable\n\n    return (\n        // <TodosContext.Provider value={{todos, getTodos}}>\n        <Fragment>\n        <InputTodo todos={todos}/>\n        <table className=\"table mt-5\">\n          <thead>\n            <tr>\n              <th>Description</th>\n              <th>Edit</th>\n              <th>Delete</th>\n            </tr>\n          </thead>\n          <tbody>\n            \n            {todos.map((todo) => (\n              <tr key={todo.id}>\n                <td>{todo.item}</td>\n                <td>\n                  <EditTodo todo={todo} />\n                </td>\n                <td>\n                  <button\n                    className=\"btn btn-danger\"\n                    // onClick={() => deleteTodo(todo.todo_id)}\n                  >\n                    Delete\n                  </button>\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n        </Fragment>\n    //   </TodosContext.Provider>\n    );\n}\n\nexport default ListTodos;\n"]},"metadata":{},"sourceType":"module"}