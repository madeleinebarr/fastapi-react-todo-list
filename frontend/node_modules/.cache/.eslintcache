[{"/Users/madeleinebarr/Documents/engineering/fastapi-react-todo/frontend/src/index.js":"1","/Users/madeleinebarr/Documents/engineering/fastapi-react-todo/frontend/src/App.js":"2","/Users/madeleinebarr/Documents/engineering/fastapi-react-todo/frontend/src/components/ListTodos.js":"3","/Users/madeleinebarr/Documents/engineering/fastapi-react-todo/frontend/src/components/InputTodos.js":"4","/Users/madeleinebarr/Documents/engineering/fastapi-react-todo/frontend/src/components/EditTodo.js":"5"},{"size":221,"mtime":1619616928884,"results":"6","hashOfConfig":"7"},{"size":256,"mtime":1619623748941,"results":"8","hashOfConfig":"7"},{"size":1632,"mtime":1619644662403,"results":"9","hashOfConfig":"7"},{"size":1212,"mtime":1619644648789,"results":"10","hashOfConfig":"7"},{"size":1764,"mtime":1619624128834,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"1rz5xxq",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"14"},"/Users/madeleinebarr/Documents/engineering/fastapi-react-todo/frontend/src/index.js",[],["26","27"],"/Users/madeleinebarr/Documents/engineering/fastapi-react-todo/frontend/src/App.js",[],"/Users/madeleinebarr/Documents/engineering/fastapi-react-todo/frontend/src/components/ListTodos.js",["28"],"import React, { Fragment, useState, useEffect } from \"react\";\nimport EditTodo from \"./EditTodo\";\nimport InputTodo from \"./InputTodos\";\n\nconst ListTodos = () => {\n\n    \n\n    const [todos, setTodos] = useState([]);\n\n\n    async function deleteTodo(id) {\n        try {\n          const res = await fetch(`http://localhost:8000/todos/${id}`, {\n            method: \"DELETE\",\n          });\n    \n          setTodos(todos.filter((todo) => todo.id !== id));\n        } catch (err) {\n          console.error(err.message);\n        }\n      }\n\n    async function getTodos() {\n        const res = await fetch(\"http://localhost:8000/todos\");\n        const todos = await res.json();\n        setTodos(todos.data);\n    }\n\n    useEffect(() => {\n        getTodos();\n      }, []);\n    \n\n\n    return (\n        <Fragment>\n        <InputTodo todos={todos}/>\n        <table className=\"table mt-5\">\n          <thead>\n            <tr>\n              <th>Description</th>\n              <th>Edit</th>\n              <th>Delete</th>\n            </tr>\n          </thead>\n          <tbody>\n            \n            {todos.map((todo) => (\n              <tr key={todo.id}>\n                <td>{todo.item}</td>\n                <td>\n                  <EditTodo todo={todo} />\n                </td>\n                <td>\n                  <button\n                    className=\"btn btn-danger\"\n                    onClick={() => deleteTodo(todo.id)}\n                  >\n                    Delete\n                  </button>\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n        </Fragment>\n    );\n}\n\nexport default ListTodos;\n","/Users/madeleinebarr/Documents/engineering/fastapi-react-todo/frontend/src/components/InputTodos.js",["29"],"import React, { Fragment, useState } from \"react\";\n\nconst InputTodo = ({ todos }) => {\n    const [item, setItem] = useState(\"\");\n\n    // console.log(todos[todos.length-1].id + 1);\n\n    const onSubmitForm = async (e) => {\n        e.preventDefault();\n    \n        try {\n            const body = { \n                \"id\": todos[todos.length-1].id + 1,\n                \"item\": item\n             };\n            const response = await fetch(\"http://localhost:8000/todos\", {\n                method: \"POST\",\n                headers: { \"Content-Type\": \"application/json\" },\n                body: JSON.stringify(body),\n            });\n\n            window.location = \"/\";\n            \n        } catch (err) {\n            console.error(err.message);\n        }\n    }\n\n    return(\n        <Fragment>\n      <h1 className=\"text-center my-5\">My todo list</h1>\n      <form className=\"d-flex\" onSubmit={onSubmitForm}>\n        <input\n          type=\"text\"\n          placeholder=\"add todo\"\n          className=\"form-control\"\n          value={item}\n          onChange={(e) => setItem(e.target.value)}\n        />\n        <button className=\"btn btn-success\">Add</button>\n      </form>\n    </Fragment>\n    );\n};\n\nexport default InputTodo;","/Users/madeleinebarr/Documents/engineering/fastapi-react-todo/frontend/src/components/EditTodo.js",["30"],"import React, { Fragment, useState } from \"react\";\n\nconst EditTodo = ({ todo }) => {\n    const [item, setItem] = useState(todo.item);\n\n    const updateItem = async (e) => {\n        e.preventDefault();\n        try {\n            const body = { item };\n            console.log(body);\n\n            const response = await fetch(`http://localhost:8000/todos/${todo.id}`, {\n                method: \"PUT\",\n                headers: { \"Content-Type\": \"application/json\" },\n                body: JSON.stringify(body)\n              });\n\n        \n              window.location = \"/\";\n        } catch (err) {\n            console.error(err.message);\n        }\n    };\n\n    return (\n        <Fragment>\n            <button type=\"button\" className=\"btn btn-warning\" data-toggle=\"modal\" data-target={`#id${todo.id}`}>\n            Edit\n            </button>\n\n            <div className=\"modal\" id={`id${todo.id}`} onClick={() => setItem(todo.item)}>\n  <div className=\"modal-dialog\">\n    <div className=\"modal-content\">\n\n      <div className=\"modal-header\">\n        <h4 className=\"modal-title\">Edit Todo</h4>\n        <button type=\"button\" className=\"close\" data-dismiss=\"modal\" onClick={() => setItem(todo.item)}>&times;</button>\n      </div>\n\n      <div className=\"modal-body\">\n        <input type=\"text\" className=\"form-control\" value={item} onChange={e => setItem(e.target.value)} />\n      </div>\n\n      <div className=\"modal-footer\">\n        <button type=\"button\" className=\"btn btn-warning\" data-dismiss=\"modal\" onClick={e => updateItem(e)}>Edit</button>\n        <button type=\"button\" className=\"btn btn-danger\" data-dismiss=\"modal\" onClick={() => setItem(todo.item)}>Close</button>\n\n      </div>\n\n    </div>\n  </div>\n</div>\n        </Fragment>\n      );\n}\n\nexport default EditTodo;",{"ruleId":"31","replacedBy":"32"},{"ruleId":"33","replacedBy":"34"},{"ruleId":"35","severity":1,"message":"36","line":14,"column":17,"nodeType":"37","messageId":"38","endLine":14,"endColumn":20},{"ruleId":"35","severity":1,"message":"39","line":16,"column":19,"nodeType":"37","messageId":"38","endLine":16,"endColumn":27},{"ruleId":"35","severity":1,"message":"39","line":12,"column":19,"nodeType":"37","messageId":"38","endLine":12,"endColumn":27},"no-native-reassign",["40"],"no-negated-in-lhs",["41"],"no-unused-vars","'res' is assigned a value but never used.","Identifier","unusedVar","'response' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]